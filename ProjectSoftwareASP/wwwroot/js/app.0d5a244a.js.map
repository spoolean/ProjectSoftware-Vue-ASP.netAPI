{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Consent.js","webpack:///./src/components/LanguageModel.js","webpack:///./src/components/Evaluation.js","webpack:///./src/components/Submit.js","webpack:///./src/App.js","webpack:///./src/components/Store.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","methods","sendConsent","this","$store","dispatch","computed","render","placeholder","state","model1","model","tts","engine","model2","survey","rating","components","Consent","LanguageModel","Evaluation","Submit","activePage","Vue","use","Vuex","Store","loading","checkBox","reviewText","mutations","setActivePage","page","incrementPage","decrementPage","setModel1","text","setModel2","actions","changePage","commit","forward","backward","sendPrompt","modelNumber","setModel","type","fetch","location","origin","method","body","JSON","stringify","headers","then","response","ok","Error","console","log","catch","error","sendTTS","modelText","ttsChoice","engineChoice","ttsModel","engineModel","audio","Audio","play","submitResponse","BootstrapVue","IconsPlugin","config","productionTip","store","h","App","$mount"],"mappings":"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","file":"js/app.0d5a244a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default {\r\n    name: \"Consent\",\r\n    data: () => ({\r\n    }),\r\n    methods: {\r\n        // This function sends the user from the consent page to the LanguageModel page\r\n        sendConsent() {\r\n            // Dispatch the action that will change the page\r\n            this.$store.dispatch(\"changePage\", 2);\r\n        }\r\n    },\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div id=\"consent\" class=\"container\">\r\n                <h3 class=\"display-3\">\r\n                    Undergraduate study on deep-neural langauge models and speech\r\n                    synthesis\r\n                </h3>\r\n                <h6 class=\"display-6\">\r\n                    by James Roche (19704410), Undergraduate at the University Of Lincoln\r\n                </h6>\r\n                <p>\r\n                    Hi. My name is James Roche. Thank you so much for taking the time to\r\n                    take part in my survey. I am researching whether or not deep machine\r\n                    learnt language models and speech synthesis can replace story writers\r\n                    and voice actors for games scripts and non-player characters\r\n                    respectively.{\" \"}\r\n                </p>\r\n                <p>\r\n                    What I would like you to do is to interact with some variations of\r\n                    these models and rate them after your interaction. You will give a\r\n                    prompt to the language model for example: “Mary has 17 children, and\r\n                    she is late for work, she is very close to being fired”, and the model\r\n                    will return a story that it has created based off this prompt. You\r\n                    will also have a conversation with the model to replicate talking to a\r\n                    NPC. After this you will rate the model based off a variety of\r\n                    parameters. It shouldn’t take you too long, but I ask that you do not\r\n                    use any profanity or try to use the system in any malicious way.{\" \"}\r\n                </p>\r\n                <p>\r\n                    This bit is very important: you have the right to withdraw your\r\n                    consent up until the point you submit your data at the end of this\r\n                    website. After this point your data will be anonymised and you will\r\n                    not be able to remove it from the study. If at any time you want to\r\n                    withdraw your consent whilst on this website, just close the tab and\r\n                    you will not have submitted anything to me. You can read the full\r\n                    intent of this study and consent here.\r\n                </p>\r\n                <p>\r\n                    If you choose to take part in my study after reading the above, thank\r\n                    you so much for your time it is greatly appreciated.{\" \"}\r\n                </p>\r\n                <p>\r\n                    I give consent to take part in this study and I am informed I can\r\n                    withdraw up until sending my data to the student’s University OneDrive\r\n                    account, I need simply leave this page.{\" \"}\r\n                </p>\r\n                <div class=\"row\">\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-success\"\r\n                        vOn:click={this.sendConsent}\r\n                    >\r\n                        Give Consent\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { BButton, BCol, BContainer, BDropdown, BDropdownItemButton, BFormTextarea, BRow } from \"bootstrap-vue\"\r\n\r\nexport default {\r\n    name: \"LanguageModel\",\r\n    data: () => ({\r\n        placeholder: \"Give the bot a prompt\"\r\n    }),\r\n    methods: {\r\n\r\n    },\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BContainer>\r\n                    The Language models to interact with\r\n                    <BRow>\r\n                        <BCol>\r\n                            <BRow aligns-h=\"between\">\r\n                                <BCol cols=\"10\">This is the story model for you to interact with</BCol>\r\n                                <BCol cols=\"1\"><BButton on-click={() => { this.$store.state.model1 = \"\"; }}>Clear</BButton></BCol>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BFormTextarea\r\n                                    id=\"Model1\"\r\n                                    v-model={this.$store.state.model1}\r\n                                    placeholder={this.placeholder}\r\n                                    rows=\"8\"\r\n                                ></BFormTextarea>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BButton on-click={() => {this.$store.dispatch(\"sendPrompt\", 1) }}>AI Response</BButton>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BDropdown text=\"Voice to generate\">\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 1, tts: 0, engine: 0}); }}>Voice 1</BDropdownItemButton>\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 1, tts: 0, engine: 1}); }}>Voice 2</BDropdownItemButton>\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 1, tts: 1, engine: 0}); }}>Voice 3</BDropdownItemButton>\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 1, tts: 1, engine: 1}); }}>Voice 3</BDropdownItemButton>\r\n                                </BDropdown>\r\n                            </BRow>\r\n                        </BCol>\r\n                        <BCol>\r\n                            <BRow aligns-h=\"between\">\r\n                                <BCol cols=\"10\">This is the story model for you to interact with</BCol>\r\n                                <BCol cols=\"1\"><BButton on-click={() => { this.$store.state.model2 = \"\"; }}>Clear</BButton></BCol>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BFormTextarea\r\n                                    id=\"Model1\"\r\n                                    v-model={this.$store.state.model2}\r\n                                    placeholder={this.placeholder}\r\n                                    rows=\"8\"\r\n                                ></BFormTextarea>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BButton on-click={() => { this.$store.dispatch(\"sendPrompt\", 2) }}>AI Response</BButton>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BDropdown text=\"Voice to generate\">\r\n                                    <BDropdownItemButton>Voice 1</BDropdownItemButton>\r\n                                    <BDropdownItemButton>Voice 2</BDropdownItemButton>\r\n                                    <BDropdownItemButton>Voice 3</BDropdownItemButton>\r\n                                </BDropdown>\r\n                            </BRow>\r\n                        </BCol>\r\n                    </BRow>\r\n                </BContainer>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { BFormRating } from \"bootstrap-vue\";\r\n\r\nexport default {\r\n    name: \"Evaluation\",\r\n    data: () => ({}),\r\n    methods: {},\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div id=\"consent\">\r\n                <BContainer>\r\n                    <BFormRating v-model={this.$store.state.survey.rating}></BFormRating>\r\n                </BContainer>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { BButton, BContainer } from \"bootstrap-vue\"\r\n\r\nexport default {\r\n    name: \"Submit\",\r\n    data: () => ({\r\n    }),\r\n    methods: {},\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BContainer>\r\n                    <p>You understand that after you submit you are no longer able to retrieve your data as it is annoymised on the server </p>\r\n                    <BButton on-click={() => { this.$store.dispatch(\"submitResponse\"); }}>Submit response</BButton>\r\n                </BContainer>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import Consent from \"./components/Consent.js\";\r\nimport LanguageModel from \"./components/LanguageModel.js\";\r\nimport Evaluation from \"./components/Evaluation.js\";\r\nimport Submit from \"./components/Submit.js\";\r\n\r\nexport default {\r\n    name: \"App\",\r\n    components: {\r\n        Consent,\r\n        LanguageModel,\r\n        Evaluation,\r\n        Submit\r\n    },\r\n    methods: {},\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* This is the pages navigation bar so users can move about the application*/}\r\n                <BRow class=\"m-1 text-center\">\r\n                    <BCol><BRow><BButton on-click={() => { this.$store.dispatch(\"backward\"); }}><BIcon icon=\"arrow-left\"></BIcon></BButton></BRow></BCol>\r\n                    <BCol cols=\"10\">\r\n                        <BRow>\r\n                            <BCol><BButton on-click={() => { this.$store.dispatch(\"changePage\", 1); }}>Consent</BButton></BCol>\r\n                            <BCol><BButton on-click={() => { this.$store.dispatch(\"changePage\", 2); }}>Model</BButton></BCol>\r\n                            <BCol><BButton on-click={() => { this.$store.dispatch(\"changePage\", 3); }}>Evaluation</BButton></BCol>\r\n                            <BCol><BButton on-click={() => { this.$store.dispatch(\"changePage\", 4); }}>Submit</BButton></BCol>\r\n                        </BRow>\r\n                    </BCol>\r\n                    <BCol><BRow><BButton on-click={() => { this.$store.dispatch(\"forward\"); }}><BIcon icon=\"arrow-right\"></BIcon></BButton\r\n                        ></BRow></BCol>\r\n                </BRow>\r\n\r\n                {/* Dynamically render each page/component based off the page number */}\r\n                {this.$store.state.activePage === 1 && <Consent />}\r\n                {this.$store.state.activePage === 2 && <LanguageModel />}\r\n                {this.$store.state.activePage === 3 && <Evaluation />}\r\n                {this.$store.state.activePage === 4 && <Submit />}\r\n            </div>\r\n        );\r\n    },\r\n};","import Vuex from \"vuex\";\r\nimport Vue from \"vue\";\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        loading: false,\r\n        activePage: 1,\r\n        model1: \"\",\r\n        model2: \"The following is a conversation with an AI assistant. The assistant is helpful, creative, clever, and very friendly.\\n\\nHuman: \",\r\n        survey: {\r\n            rating: null,\r\n            checkBox: false,\r\n            reviewText: \"\",\r\n        }\r\n    },\r\n    mutations: {\r\n        setActivePage(state, page) {\r\n            state.activePage = page;\r\n        },\r\n        incrementPage(state) {\r\n            if (state.activePage != 4) {\r\n                state.activePage += 1;\r\n            }\r\n        },\r\n        decrementPage(state) {\r\n            if (state.activePage != 1) {\r\n                state.activePage -= 1;\r\n            }\r\n        },\r\n        setModel1(state, text) {\r\n            state.model1 += text;\r\n        },\r\n        setModel2(state, text) {\r\n            state.model2 += text;\r\n        }\r\n    },\r\n    actions: {\r\n        changePage({ commit }, page) {\r\n            commit(\"setActivePage\", page);\r\n        },\r\n        forward({ commit }) {\r\n            commit(\"incrementPage\");\r\n        },\r\n        backward({ commit }) {\r\n            commit(\"decrementPage\");\r\n        },\r\n        sendPrompt({ commit }, modelNumber) {\r\n            let model = (modelNumber === 1) ? this.state.model1 : this.state.model2;\r\n            let setModel = (modelNumber === 1) ? \"setModel1\" : \"setModel2\";\r\n            let type = (modelNumber === 1) ? 'completion' : 'chat';\r\n\r\n            fetch(`${window.location.origin}/languagemodel`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ text: model, type: type }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.text);\r\n                }\r\n                return response.text();\r\n            }).then(data => {\r\n                console.log(data);\r\n                commit(setModel, data);\r\n            }).catch(error => { console.log(error); });\r\n        },\r\n        sendTTS({ commit }, { model, tts , engine}) {\r\n            let modelText = (model === 1) ? this.state.model1 : this.state.model2;\r\n            let ttsChoice = ['getazure', 'getgoogle'];\r\n            let engineChoice = ['standard', 'neural'];\r\n            let ttsModel = ttsChoice[tts];\r\n            let engineModel = engineChoice[engine];\r\n\r\n            let audio = new Audio(`${window.location.origin}/tts/${ttsModel}/?answer=${modelText}&engine=${engineModel}`)\r\n            audio.play();\r\n        },\r\n        submitResponse({ commit }) {\r\n            console.log(JSON.stringify(this.state.survey));\r\n            fetch(`${window.location.origin}/submit`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(this.state.survey),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.text);\r\n                }\r\n                return response.text();\r\n            }).then(data => {\r\n                console.log(data);\r\n            }).catch(error => { console.log(error); });\r\n        },\r\n    },\r\n});","/*Import Vue and associated Vue dependencies*/\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n/*Import bootstrap and nessecary files*/\r\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\r\nimport App from \"./App.js\";\r\nimport Store from \"./components/Store.js\";\r\n\r\nVue.use(Vuex);\r\nVue.use(BootstrapVue);\r\nVue.use(IconsPlugin);\r\nVue.config.productionTip = false;\r\n\r\nnew Vue({\r\n  store: Store,\r\n  render: (h) => h(App),\r\n}).$mount(\"#app\");\r\n"],"sourceRoot":""}