{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Consent.js","webpack:///./src/components/LanguageModel.js","webpack:///./src/components/ChatModel.js","webpack:///./src/components/Evaluation.js","webpack:///./src/components/Submit.js","webpack:///./src/App.js","webpack:///./src/components/Store.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","methods","sendConsent","this","$store","dispatch","computed","render","placeholder","evaluate","state","model1","prompt1","prompt2","prompt3","loading","model","tts","engine","model2","trailOff","text","errors","knowledgable","engagingStorys","realisticAnswers","couldConverse","canLie","listeningEffortOptions","hardToUnderstandOptions","voicePace","voice3ComparisonOptions","vlaue","voicesOptions","survey","story","trailOffReason","chat","voice1","overallRating","listeningEffort","hardToUnderstand","whichWords","voice3Comparison","voice2","voices","preferredVoice","preferredVoiceReason","clearestVoice","submit","submitted","components","Consent","LanguageModel","Evaluation","Submit","activePage","Vue","use","Vuex","Store","audio","Audio","mutations","setActivePage","page","incrementPage","decrementPage","setModel1","setModel2","actions","changePage","commit","forward","backward","sendPrompt","modelNumber","setModel","type","fetch","location","origin","method","body","JSON","stringify","headers","then","response","ok","Error","statusText","console","log","catch","error","sendTTS","modelText","ttsChoice","engineChoice","ttsModel","engineModel","pause","src","play","submitResponse","BootstrapVue","IconsPlugin","config","productionTip","store","h","App","$mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,kMCrJM,GACXgB,KAAM,UACNpC,KAAM,KAAM,IAEZ6D,QAAS,CAELC,cAEIC,KAAKC,OAAOC,SAAS,aAAc,KAG3CC,SAAU,GACVC,SAAS,qBACL,0BACY,YADZ,4jCAUmC,iBAVnC,MAUwD,QAVxD,mCAYuB,OAZvB,yBAcyB,UAdzB,MAe0B,kBAf1B,UAgB+BJ,KAAKD,cAhBpC,wCAqBuB,eArBvB,MAqB4C,YArB5C,4rB,wECbO,GACX1B,KAAM,gBACNpC,KAAM,KAAM,CACRoE,YAAa,0BAEjBP,QAAS,CACLQ,WACIN,KAAKC,OAAOC,SAAS,aAAc,KAG3CC,SAAU,GACVC,SAAS,qBACL,4XAOkC,QAPlC,6BAQmC,YARnC,2DAW4C,mBAX5C,MAWoE,YAXpE,qBAY+D,KAAQJ,KAAKC,OAAOM,MAAMC,OAASR,KAAKC,OAAOM,MAAME,WAZpH,kCAa+D,KAAQT,KAAKC,OAAOM,MAAMC,OAASR,KAAKC,OAAOM,MAAMG,WAbpH,kCAc+D,KAAQV,KAAKC,OAAOM,MAAMC,OAASR,KAAKC,OAAOM,MAAMI,WAdpH,gDAiBiD,KAAQX,KAAKC,OAAOM,MAAMC,OAAS,MAjBpF,6CAqB+B,SArB/B,YAuByCR,KAAKK,YAvB9C,KAwBiC,KAxBjC,aAsBqCL,KAAKC,OAAOM,MAAMC,OAtBvD,uBAsBqCR,KAAKC,OAAOM,MAtBjD,gDA4B2C,KAAQP,KAAKC,OAAOC,SAAS,aAAc,MA5BtF,iBA6ByBF,KAAKC,OAAOM,MAAMK,SAAlB,YA7BzB,gCAgCwC,sBAhCxC,qBAiC2D,KAAQZ,KAAKC,OAAOC,SAAS,UAAW,CAAEW,MAAO,EAAGC,IAAK,EAAGC,OAAQ,OAjC/H,iCAkC2D,KAAQf,KAAKC,OAAOC,SAAS,UAAW,CAAEW,MAAO,EAAGC,IAAK,EAAGC,OAAQ,OAlC/H,iCAmC2D,KAAQf,KAAKC,OAAOC,SAAS,UAAW,CAAEW,MAAO,EAAGC,IAAK,EAAGC,OAAQ,OAnC/H,2CAwCyB,UAxCzB,MAyC0B,kBAzC1B,UA0C+Bf,KAAKM,WA1CpC,2BCZO,GACXjC,KAAM,YACNpC,KAAM,KAAM,CACRoE,YAAa,0BAEjBP,QAAS,CACLQ,WACIN,KAAKC,OAAOC,SAAS,aAAc,KAG3CC,SAAU,GACVC,SAAS,qBACL,gMAOkC,QAPlC,6BAQmC,YARnC,uBASmC,OATnC,oDAUmC,MAVnC,qBAU0D,KAAQJ,KAAKC,OAAOM,MAAMS,OAAS,MAV7F,6CAc+B,SAd/B,YAgByChB,KAAKK,YAhB9C,KAiBiC,KAjBjC,aAeqCL,KAAKC,OAAOM,MAAMS,OAfvD,uBAeqChB,KAAKC,OAAOM,MAfjD,gDAqB2C,KAAQP,KAAKC,OAAOC,SAAS,aAAc,MArBtF,mDAwBwC,sBAxBxC,qBAyB2D,KAAQF,KAAKC,OAAOC,SAAS,UAAW,CAAEW,MAAO,EAAGC,IAAK,EAAGC,OAAQ,OAzB/H,iCA0B2D,KAAQf,KAAKC,OAAOC,SAAS,UAAW,CAAEW,MAAO,EAAGC,IAAK,EAAGC,OAAQ,OA1B/H,iCA2B2D,KAAQf,KAAKC,OAAOC,SAAS,UAAW,CAAEW,MAAO,EAAGC,IAAK,EAAGC,OAAQ,OA3B/H,2CAgCyB,UAhCzB,MAiC0B,kBAjC1B,UAkC+Bf,KAAKM,WAlCpC,uB,oCCXO,GACXjC,KAAM,aACNpC,KAAM,KAAM,CACRgF,SAAU,CACN,CAAEC,KAAM,2BAA4BpC,MAAO,4BAC3C,CAAEoC,KAAM,uCAAwCpC,MAAO,wCACvD,CAAEoC,KAAM,oCAAqCpC,MAAO,qCACpD,CAAEoC,KAAM,+CAAgDpC,MAAO,iDAEnEqC,OAAQ,CACJ,CAAED,KAAM,YAAapC,MAAO,aAC5B,CAAEoC,KAAM,cAAepC,MAAO,eAC9B,CAAEoC,KAAM,iBAAkBpC,MAAO,kBACjC,CAAEoC,KAAM,8BAA+BpC,MAAO,gCAElDsC,aAAc,CACV,CAAEF,KAAM,oBAAqBpC,MAAO,qBACpC,CAAEoC,KAAM,gBAAiBpC,MAAO,iBAChC,CAAEoC,KAAM,qBAAsBpC,MAAO,uBAEzCuC,eAAgB,CACZ,CAAEH,KAAM,6BAA8BpC,MAAO,8BAC7C,CAAEoC,KAAM,0CAA2CpC,MAAO,2CAC1D,CAAEoC,KAAM,iCAAkCpC,MAAO,mCAErDwC,iBAAkB,CACd,CAAEJ,KAAM,+BAAgCpC,MAAO,gCAC/C,CAAEoC,KAAM,4CAA6CpC,MAAO,6CAC5D,CAAEoC,KAAM,mCAAoCpC,MAAO,oCACnD,CAAEoC,KAAM,6BAA8BpC,MAAO,+BAEjDyC,cAAe,CACX,CAAEL,KAAM,sBAAuBpC,MAAO,uBACtC,CAAEoC,KAAM,yBAA0BpC,MAAO,0BACzC,CAAEoC,KAAM,iBAAkBpC,MAAO,mBAErC0C,OAAQ,CACJ,CAAEN,KAAM,sEAAuEpC,MAAO,sEACtF,CAAEoC,KAAM,+DAAgEpC,MAAO,iEAEnF2C,uBAAwB,CACpB,CAAEP,KAAM,qBAAsBpC,MAAO,sBACrC,CAAEoC,KAAM,uBAAwBpC,MAAO,wBACvC,CAAEoC,KAAM,2BAA4BpC,MAAO,4BAC3C,CAAEoC,KAAM,kBAAmBpC,MAAO,mBAClC,CAAEoC,KAAM,4CAA6CpC,MAAO,8CAEhE4C,wBAAyB,CACrB,CAAER,KAAM,QAASpC,MAAO,SACxB,CAAEoC,KAAM,SAAUpC,MAAO,UACzB,CAAEoC,KAAM,YAAapC,MAAO,aAC5B,CAAEoC,KAAM,QAASpC,MAAO,SACxB,CAAEoC,KAAM,kBAAmBpC,MAAO,oBAEtC6C,UAAW,CACP,CAAET,KAAM,WAAYpC,MAAO,YAC3B,CAAEoC,KAAM,aAAcpC,MAAO,cAC7B,CAAEoC,KAAM,WAAYpC,MAAO,aAE/B8C,wBAAyB,CACrB,CAAEV,KAAM,cAAeW,MAAO,eAC9B,CAAEX,KAAM,kBAAmBW,MAAO,mBAClC,CAAEX,KAAM,eAAgBpC,MAAO,gBAC/B,CAAEoC,KAAM,iBAAkBpC,MAAO,kBACjC,CAAEoC,KAAM,aAAcpC,MAAO,eAEjCgD,cAAe,CACX,CAAEZ,KAAM,UAAWpC,MAAO,WAC1B,CAAEoC,KAAM,UAAWpC,MAAO,WAC1B,CAAEoC,KAAM,UAAWpC,MAAO,cAGlCgB,QAAS,GACTK,SAAU,GACVC,SAAS,qBACL,0BACY,YADZ,iLAO2B,aAP3B,oFAQuC,OARvC,UAQiD,WARjD,QAQuHJ,KAAKiB,UAR5H,aAQqEjB,KAAKC,OAAOM,MAAMwB,OAAOC,MAAMf,SARpG,uBAQqEjB,KAAKC,OAAOM,MAAMwB,OAAOC,MAR9F,wCAS2B,mBAT3B,kFAUkC,OAVlC,UAU4C,WAV5C,aAU+DhC,KAAKC,OAAOM,MAAMwB,OAAOC,MAAMC,eAV9F,uBAU+DjC,KAAKC,OAAOM,MAAMwB,OAAOC,MAVxF,8CAW2B,WAX3B,oDAYuC,OAZvC,UAYiD,SAZjD,QAYmHhC,KAAKmB,QAZxH,aAYmEnB,KAAKC,OAAOM,MAAMwB,OAAOC,MAAMb,OAZlG,uBAYmEnB,KAAKC,OAAOM,MAAMwB,OAAOC,MAZ5F,sCAa2B,iBAb3B,iDAcuC,OAdvC,UAciD,eAdjD,QAc+HhC,KAAKoB,cAdpI,aAcyEpB,KAAKC,OAAOM,MAAMwB,OAAOC,MAAMZ,aAdxG,uBAcyEpB,KAAKC,OAAOM,MAAMwB,OAAOC,MAdlG,4CAe2B,mBAf3B,iHAgBuC,OAhBvC,UAgBiD,iBAhBjD,QAgBmIhC,KAAKqB,gBAhBxI,aAgB2ErB,KAAKC,OAAOM,MAAMwB,OAAOC,MAAMX,eAhB1G,uBAgB2ErB,KAAKC,OAAOM,MAAMwB,OAAOC,MAhBpG,8CAiB2B,YAjB3B,uEAkBkC,OAlBlC,UAkB4C,WAlB5C,aAkB+DhC,KAAKC,OAAOM,MAAMwB,OAAOC,MAAMvB,QAlB9F,uBAkB+DT,KAAKC,OAAOM,MAAMwB,OAAOC,MAlBxF,uCAmB2B,YAnB3B,uEAoBkC,OApBlC,UAoB4C,WApB5C,aAoB+DhC,KAAKC,OAAOM,MAAMwB,OAAOC,MAAMtB,QApB9F,uBAoB+DV,KAAKC,OAAOM,MAAMwB,OAAOC,MApBxF,uCAqB2B,YArB3B,uEAsBkC,OAtBlC,UAsB4C,WAtB5C,aAsB+DhC,KAAKC,OAAOM,MAAMwB,OAAOC,MAAMrB,QAtB9F,uBAsB+DX,KAAKC,OAAOM,MAAMwB,OAAOC,MAtBxF,4DAyB2B,qBAzB3B,2DA0BuC,OA1BvC,UA0BiD,mBA1BjD,QA0BsIhC,KAAKsB,kBA1B3I,aA0B6EtB,KAAKC,OAAOM,MAAMwB,OAAOG,KAAKZ,iBA1B3G,uBA0B6EtB,KAAKC,OAAOM,MAAMwB,OAAOG,KA1BtG,gDA2B2B,kBA3B3B,4HA4BuC,OA5BvC,UA4BiD,gBA5BjD,QA4BgIlC,KAAKuB,eA5BrI,aA4B0EvB,KAAKC,OAAOM,MAAMwB,OAAOG,KAAKX,cA5BxG,uBA4B0EvB,KAAKC,OAAOM,MAAMwB,OAAOG,KA5BnG,6CA6B2B,WA7B3B,uGA8BuC,OA9BvC,UA8BiD,SA9BjD,QA8BkHlC,KAAKwB,QA9BvH,aA8BmExB,KAAKC,OAAOM,MAAMwB,OAAOG,KAAKV,OA9BjG,uBA8BmExB,KAAKC,OAAOM,MAAMwB,OAAOG,KA9B5F,sGAmC2B,kBAnC3B,0EAoCmC,OApCnC,UAoC6C,iBApC7C,aAoCsElC,KAAKC,OAAOM,MAAMwB,OAAOI,OAAOC,cApCtG,uBAoCsEpC,KAAKC,OAAOM,MAAMwB,OAAOI,OApC/F,6CAqC2B,oBArC3B,0EAsCuC,OAtCvC,UAsCiD,kBAtCjD,QAsCsInC,KAAKyB,wBAtC3I,aAsC4EzB,KAAKC,OAAOM,MAAMwB,OAAOI,OAAOE,gBAtC5G,uBAsC4ErC,KAAKC,OAAOM,MAAMwB,OAAOI,OAtCrG,+CAuC2B,qBAvC3B,gEAwCuC,OAxCvC,UAwCiD,mBAxCjD,QAwCwInC,KAAK0B,yBAxC7I,aAwC6E1B,KAAKC,OAAOM,MAAMwB,OAAOI,OAAOG,iBAxC7G,uBAwC6EtC,KAAKC,OAAOM,MAAMwB,OAAOI,OAxCtG,gDAyC2B,eAzC3B,4CA0CkC,OA1ClC,UA0C4C,cA1C5C,aA0CkEnC,KAAKC,OAAOM,MAAMwB,OAAOI,OAAOI,WA1ClG,uBA0CkEvC,KAAKC,OAAOM,MAAMwB,OAAOI,OA1C3F,0CA2C2B,cA3C3B,yEA4CuC,OA5CvC,UA4CiD,YA5CjD,QA4C0HnC,KAAK2B,WA5C/H,aA4CsE3B,KAAKC,OAAOM,MAAMwB,OAAOI,OAAOR,UA5CtG,uBA4CsE3B,KAAKC,OAAOM,MAAMwB,OAAOI,OA5C/F,yCA6C2B,oBA7C3B,wFA8CuC,OA9CvC,UA8CiD,kBA9CjD,QA8CuInC,KAAK4B,yBA9C5I,aA8C4E5B,KAAKC,OAAOM,MAAMwB,OAAOI,OAAOK,iBA9C5G,uBA8C4ExC,KAAKC,OAAOM,MAAMwB,OAAOI,OA9CrG,yGAkD2B,mBAlD3B,0EAmDmC,OAnDnC,UAmD6C,kBAnD7C,aAmDuEnC,KAAKC,OAAOM,MAAMwB,OAAOU,OAAOL,cAnDvG,uBAmDuEpC,KAAKC,OAAOM,MAAMwB,OAAOU,OAnDhG,6CAoD2B,qBApD3B,0EAqDuC,OArDvC,UAqDiD,mBArDjD,QAqDuIzC,KAAKyB,wBArD5I,aAqD6EzB,KAAKC,OAAOM,MAAMwB,OAAOU,OAAOJ,gBArD7G,uBAqD6ErC,KAAKC,OAAOM,MAAMwB,OAAOU,OArDtG,+CAsD2B,sBAtD3B,gEAuDuC,OAvDvC,UAuDiD,oBAvDjD,QAuDyIzC,KAAK0B,yBAvD9I,aAuD8E1B,KAAKC,OAAOM,MAAMwB,OAAOU,OAAOH,iBAvD9G,uBAuD8EtC,KAAKC,OAAOM,MAAMwB,OAAOU,OAvDvG,gDAwD2B,gBAxD3B,4CAyDkC,OAzDlC,UAyD4C,eAzD5C,aAyDmEzC,KAAKC,OAAOM,MAAMwB,OAAOU,OAAOF,WAzDnG,uBAyDmEvC,KAAKC,OAAOM,MAAMwB,OAAOU,OAzD5F,0CA0D2B,eA1D3B,yEA2DuC,OA3DvC,UA2DiD,aA3DjD,QA2D2HzC,KAAK2B,WA3DhI,aA2DuE3B,KAAKC,OAAOM,MAAMwB,OAAOU,OAAOd,UA3DvG,uBA2DuE3B,KAAKC,OAAOM,MAAMwB,OAAOU,OA3DhG,yCA4D2B,qBA5D3B,wFA6DuC,OA7DvC,UA6DiD,mBA7DjD,QA6DwIzC,KAAK4B,yBA7D7I,aA6D6E5B,KAAKC,OAAOM,MAAMwB,OAAOU,OAAOD,iBA7D7G,uBA6D6ExC,KAAKC,OAAOM,MAAMwB,OAAOU,OA7DtG,sFAiE2B,mBAjE3B,4DAkEuC,OAlEvC,UAkEiD,iBAlEjD,QAkEoIzC,KAAK8B,eAlEzI,aAkE2E9B,KAAKC,OAAOM,MAAMwB,OAAOW,OAAOC,eAlE3G,uBAkE2E3C,KAAKC,OAAOM,MAAMwB,OAAOW,OAlEpG,8CAmE2B,oBAnE3B,0BAoEkC,OApElC,UAoE4C,mBApE5C,aAoEuE1C,KAAKC,OAAOM,MAAMwB,OAAOW,OAAOE,qBApEvG,uBAoEuE5C,KAAKC,OAAOM,MAAMwB,OAAOW,OApEhG,oDAqE2B,kBArE3B,gEAsEuC,OAtEvC,UAsEiD,gBAtEjD,QAsEkI1C,KAAK8B,eAtEvI,aAsE0E9B,KAAKC,OAAOM,MAAMwB,OAAOW,OAAOG,cAtE1G,uBAsE0E7C,KAAKC,OAAOM,MAAMwB,OAAOW,OAtEnG,4DAyEiC,WAzEjC,MAyEiD,OAzEjD,UAyEkE,KAAQ1C,KAAKC,OAAOC,SAAS,cAzE/F,uBC5EO,GACX7B,KAAM,SACNpC,KAAM,KAAM,IACZ6D,QAAS,CACLgD,SACS9C,KAAKC,OAAOM,MAAMwC,YACnB/C,KAAKC,OAAOC,SAAS,kBACrBF,KAAKC,OAAOM,MAAMwC,WAAY,KAI1C3C,SAAS,qBACL,6DAIqB,QAJrB,qQAM+B,KAAQJ,KAAK8C,YAN5C,uBAO2C,IAA9B9C,KAAKC,OAAOM,MAAMK,SAAlB,WACgC,IAAhCZ,KAAKC,OAAOM,MAAMwC,WAAlB,iFChBN,GACX1E,KAAM,MACN2E,WAAY,CACRC,UACAC,gBACAC,aACAC,UAEJtD,QAAS,GACTK,SAAU,GACVC,SAAS,qBACL,gCAGoB,0CAHpB,iBAIwB,YAJxB,kCAI4D,KAAQJ,KAAKC,OAAOC,SAAS,eAJzF,wBAIqH,sBAJrH,gBAKwB,oBALxB,kCAKoE,KAAQF,KAAKC,OAAOC,SAAS,cALjG,wBAK4H,yBAIlF,IAAjCF,KAAKC,OAAOM,MAAM8C,YAAlB,KACiC,IAAjCrD,KAAKC,OAAOM,MAAM8C,YAAlB,KACiC,IAAjCrD,KAAKC,OAAOM,MAAM8C,YAAlB,KACiC,IAAjCrD,KAAKC,OAAOM,MAAM8C,YAAlB,KACiC,IAAjCrD,KAAKC,OAAOM,MAAM8C,YAAlB,SC3BjBC,aAAIC,IAAIC,QAEO,UAAIA,OAAKC,MAAM,CAC1BlD,MAAO,CACHK,SAAS,EACTmC,WAAW,EACXW,MAAO,IAAIC,MACXN,WAAY,EACZ7C,OAAQ,GACRQ,OAAQ,kIACRP,QAAS,WACTC,QAAS,WACTC,QAAS,WACToB,OAAQ,CACJC,MAAO,CACHf,SAAU,GACVgB,eAAgB,GAChBd,OAAQ,GACRC,aAAc,GACdC,eAAgB,GAChBZ,QAAS,GACTC,QAAS,GACTC,QAAS,IAEbuB,KAAM,CACFZ,iBAAkB,GAClBC,cAAe,GACfC,OAAQ,IAEZW,OAAQ,CACJC,cAAe,EACfC,gBAAiB,GACjBC,iBAAkB,GAClBC,WAAY,GACZZ,UAAW,GACXa,iBAAkB,IAEtBC,OAAQ,CACJL,cAAe,EACfC,gBAAiB,GACjBC,iBAAkB,GAClBC,WAAY,GACZZ,UAAW,GACXa,iBAAkB,IAEtBE,OAAQ,CACJC,eAAgB,GAChBC,qBAAsB,GACtBC,cAAe,MAI3Be,UAAW,CACPC,cAActD,EAAOuD,GACjBvD,EAAM8C,WAAaS,GAEvBC,cAAcxD,GACc,GAApBA,EAAM8C,aACN9C,EAAM8C,YAAc,IAG5BW,cAAczD,GACc,GAApBA,EAAM8C,aACN9C,EAAM8C,YAAc,IAG5BY,UAAU1D,EAAOW,GACbX,EAAMC,QAAUU,GAEpBgD,UAAU3D,EAAOW,GACbX,EAAMS,QAAUE,IAGxBiD,QAAS,CACLC,YAAW,OAAEC,GAAUP,GACnBO,EAAO,gBAAiBP,IAE5BQ,SAAQ,OAAED,IACNA,EAAO,kBAEXE,UAAS,OAAEF,IACPA,EAAO,kBAEXG,YAAW,OAAEH,GAAUI,GACnBzE,KAAKO,MAAMK,SAAU,EAErB,IAAIC,EAAyB,IAAhB4D,EAAqBzE,KAAKO,MAAMC,OAASR,KAAKO,MAAMS,OAC7D0D,EAA4B,IAAhBD,EAAqB,YAAc,YAC/CE,EAAwB,IAAhBF,EAAqB,aAAe,OAEhDG,MAASjF,OAAOkF,SAASC,OAAlB,iBAA0C,CAC7CC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEhE,KAAML,EAAO8D,KAAMA,IAC1CQ,QAAS,CAAE,eAAgB,sBAC5BC,KAAKC,IACJ,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASnE,SACjBkE,KAAKnJ,IACJwJ,QAAQC,IAAIzJ,GACZoI,EAAOK,EAAUzI,GACjB+D,KAAKO,MAAMK,SAAU,IACtB+E,MAAMC,IAAWH,QAAQC,IAAIE,MAEpCC,SAAQ,OAAExB,IAAU,MAAExD,EAAF,IAASC,EAAT,OAAeC,IAC/B,IAAI+E,EAAuB,IAAVjF,EAAeb,KAAKO,MAAMC,OAASR,KAAKO,MAAMS,OAC3D+E,EAAY,CAAC,WAAY,aACzBC,EAAe,CAAC,WAAY,UAC5BC,EAAWF,EAAUjF,GACrBoF,EAAcF,EAAajF,GAE/Bf,KAAKO,MAAMmD,MAAMyC,QACjBnG,KAAKO,MAAMmD,MAAM0C,IAAO,GAAEzG,OAAOkF,SAASC,cAAcmB,aAAoBH,YAAoBI,IAChGlG,KAAKO,MAAMmD,MAAM2C,QAErBC,gBAAe,OAAEjC,IACbrE,KAAKO,MAAMK,SAAU,EACrB6E,QAAQC,IAAIT,KAAKC,UAAUlF,KAAKO,MAAMwB,SACtC6C,MAASjF,OAAOkF,SAASC,OAAlB,UAAmC,CACtCC,OAAQ,OACRC,KAAMC,KAAKC,UAAUlF,KAAKO,MAAMwB,QAChCoD,QAAS,CAAE,eAAgB,sBAC5BC,KAAKC,IACJ,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASnE,SACjBkE,KAAKnJ,IACJ+D,KAAKO,MAAMK,SAAU,EACrB6E,QAAQC,IAAIzJ,KACb0J,MAAMC,IAAWH,QAAQC,IAAIE,SC5H5CtC,aAAIC,IAAIC,QACRF,aAAIC,IAAIgD,QACRjD,aAAIC,IAAIiD,QACRlD,aAAImD,OAAOC,eAAgB,EAE3B,IAAIpD,aAAI,CACNqD,MAAOlD,EACPrD,OAASwG,GAAMA,EAAEC,KAChBC,OAAO","file":"js/app.f7c9aabf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { BButton, BContainer, BModal } from \"bootstrap-vue\";\r\n\r\nexport default {\r\n    name: \"Consent\",\r\n    data: () => ({\r\n    }),\r\n    methods: {\r\n        // This function sends the user from the consent page to the LanguageModel page\r\n        sendConsent() {\r\n            // Dispatch the action that will change the page\r\n            this.$store.dispatch(\"changePage\", 2);\r\n        }\r\n    },\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div id=\"consent\">\r\n                <BContainer>\r\n                    <div>\r\n                        <h2>Can language models and speech synthesis produce believable Non-Player-Characters (NPCs) to use in games?</h2>\r\n                        <h5>An undergraduate study for the Universtiy Of Lincoln by James Roche 19704410</h5>\r\n                        <p>Hi there, thankyou for taking the time to take part in my study. I am looking into how Generative Pre-trained Transformers and langauge models can be used by games developers to replace voice acted Non-Player entities.</p>\r\n                        <p>In the next couple of pages you will interact with these language models and hear the voice syntesis for them. Imagine they are a character in a game or the story for a game.</p>\r\n                        <p>These models can be made more specific by giving them information for which they can be trained on. This allows them to gain knowledge on specific scenarios, but in this instance they are very general.</p>\r\n                        <p>By taking part in this study you consent to allow me to use your responses in my research and to produce conclussions of said data. You can read the whole consent form here</p>\r\n                        <BButton v-b-modal=\"ConsentModal\" class=\"mb-3\">Show Consent</BButton>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-success\"\r\n                            vOn:click={this.sendConsent}\r\n                        >\r\n                            Give Consent\r\n                        </button>\r\n                    </div>\r\n                    <BModal id=\"ConsentModal\" title=\"Consent\">\r\n                        <p>Your data will be stored and annonymised on a Microsoft Azure server, and will only be stored at the very end of this survey once you click submit.</p>\r\n                        <p>Once you have submitted your data it is impossible to ask for it back or to be removed from the study as it will be anonymous. Your data may be kept in the Universtiy of Lincoln after the study has concluded and may be used by other academics for research.</p>\r\n                        <p>Conclusions will be drawn and your responses maybe directly quoted in the report. The dissertation may be put up by the University where you can see the results of your help.</p>\r\n                        <p>Thank you so much for giving me your time, I greatly apreciate it.</p>\r\n                    </BModal>\r\n                </BContainer>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { BButton, BCol, BContainer, BDropdown, BDropdownItemButton, BFormTextarea, BRow, BSpinner } from \"bootstrap-vue\"\r\n\r\nexport default {\r\n    name: \"LanguageModel\",\r\n    data: () => ({\r\n        placeholder: \"Give the bot a prompt\"\r\n    }),\r\n    methods: {\r\n        evaluate() {\r\n            this.$store.dispatch(\"changePage\", 3)\r\n        }\r\n    },\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BContainer>\r\n                    <BContainer>\r\n                        <p>This is the langauge model. I would like you to please give the model a prompt, some example prompts have been given to you below. It will complete the prompt you have given it and is good for finishing storys. Please pay atteniton to the responses it gives and if it ever sticks, clear it and try again.</p>\r\n                    </BContainer>\r\n                    <BRow>\r\n                        <BContainer class=\"mb-3\">\r\n                            <BRow aligns-h=\"between\">\r\n                                <BCol>Story Model</BCol>\r\n                                <BCol>\r\n                                    <BDropdown text=\"Example Prompts\" class=\"dropdown\">\r\n                                        <BDropdownItemButton on-click={() => { this.$store.state.model1 = this.$store.state.prompt1; }}>Prompt 1</BDropdownItemButton>\r\n                                        <BDropdownItemButton on-click={() => { this.$store.state.model1 = this.$store.state.prompt2; }}>Prompt 2</BDropdownItemButton>\r\n                                        <BDropdownItemButton on-click={() => { this.$store.state.model1 = this.$store.state.prompt3; }}>Prompt 3</BDropdownItemButton>\r\n                                    </BDropdown>\r\n                                </BCol>\r\n                                <BCol><BButton on-click={() => { this.$store.state.model1 = \"\"; }}>Clear</BButton></BCol>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BFormTextarea\r\n                                    id=\"Model1\"\r\n                                    v-model={this.$store.state.model1}\r\n                                    placeholder={this.placeholder}\r\n                                    rows=\"8\"\r\n                                ></BFormTextarea>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BButton on-click={() => { this.$store.dispatch(\"sendPrompt\", 1) }}>AI Response</BButton>\r\n                                {this.$store.state.loading && <BSpinner />}\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BDropdown text=\"Voice to generate\">\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 1, tts: 0, engine: 0 }); }}>Voice 1</BDropdownItemButton>\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 1, tts: 1, engine: 1 }); }}>Voice 2</BDropdownItemButton>\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 1, tts: 1, engine: 0 }); }}>Voice 3</BDropdownItemButton>\r\n                                </BDropdown>\r\n                            </BRow>\r\n                        </BContainer>\r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-success\"\r\n                            vOn:click={this.evaluate}\r\n                        >\r\n                            To Chat Model\r\n                        </button>\r\n                    </BRow>\r\n                </BContainer>\r\n                \r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { BButton, BCol, BContainer, BDropdown, BDropdownItemButton, BFormTextarea, BRow, BSpinner } from \"bootstrap-vue\"\r\n\r\nexport default {\r\n    name: \"ChatModel\",\r\n    data: () => ({\r\n        placeholder: \"Give the bot a prompt\"\r\n    }),\r\n    methods: {\r\n        evaluate() {\r\n            this.$store.dispatch(\"changePage\", 3)\r\n        }\r\n    },\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BContainer>\r\n                    <BContainer>\r\n                        <p>This is the chat model, I would like you to communicate with the model as if you were communicating with a chatbot. </p>\r\n                    </BContainer>\r\n                    <BRow>\r\n                        <BContainer class=\"mb-3\">\r\n                            <BRow aligns-h=\"between\">\r\n                                <BCol cols=\"10\">This is the chat model. </BCol>\r\n                                <BCol cols=\"1\"><BButton on-click={() => { this.$store.state.model2 = \"\"; }}>Clear</BButton></BCol>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BFormTextarea\r\n                                    id=\"Model1\"\r\n                                    v-model={this.$store.state.model2}\r\n                                    placeholder={this.placeholder}\r\n                                    rows=\"8\"\r\n                                ></BFormTextarea>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BButton on-click={() => { this.$store.dispatch(\"sendPrompt\", 2) }}>AI Response</BButton>\r\n                            </BRow>\r\n                            <BRow>\r\n                                <BDropdown text=\"Voice to generate\">\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 2, tts: 0, engine: 0 }); }}>Voice 1</BDropdownItemButton>\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 2, tts: 1, engine: 1 }); }}>Voice 2</BDropdownItemButton>\r\n                                    <BDropdownItemButton on-click={() => { this.$store.dispatch(\"sendTTS\", { model: 2, tts: 1, engine: 0 }); }}>Voice 3</BDropdownItemButton>\r\n                                </BDropdown>\r\n                            </BRow>\r\n                        </BContainer>\r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-success\"\r\n                            vOn:click={this.evaluate}\r\n                        >\r\n                            To Survey\r\n                        </button>\r\n                    </BRow>\r\n                </BContainer>\r\n                \r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { BButton, BFormInput, BFormRadioGroup, BFormRating, BRow } from \"bootstrap-vue\";\r\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\r\n\r\nexport default {\r\n    name: \"Evaluation\",\r\n    data: () => ({\r\n        trailOff: [\r\n            { text: \"Did not trail off at all\", value: \"Did not trail off at all\" },\r\n            { text: \"Trailed off a little towards the end\", value: \"Trailed off a little towards the end\" },\r\n            { text: \"Trailed off a lot towards the end\", value: \"Trailed off a lot towards the end\" },\r\n            { text: \"No relation whatsover to the original prompt\", value: \"No relation whatsover to the original prompt\" },\r\n        ],\r\n        errors: [\r\n            { text: \"No errors\", value: \"No errors\" },\r\n            { text: \"Some errors\", value: \"Some errors\" },\r\n            { text: \"Lots of errors\", value: \"Lots of errors\" },\r\n            { text: \"Complete gramatical rubbish\", value: \"Complete gramatical rubbish\" },\r\n        ],\r\n        knowledgable: [\r\n            { text: \"Not knowledgeable\", value: \"Not knowledgeable\" },\r\n            { text: \"Knowledgeable\", value: \"Knowledgeable\" },\r\n            { text: \"Very knowledgeable\", value: \"Very knowledgeable\" },\r\n        ],\r\n        engagingStorys: [\r\n            { text: \"Can create engaging storys\", value: \"Can create engaging storys\" },\r\n            { text: \"Can occasionally create engaging storys\", value: \"Can occasionally create engaging storys\" },\r\n            { text: \"Can create non-engaging storys\", value: \"Can create non-engaging storys\" },\r\n        ],\r\n        realisticAnswers: [\r\n            { text: \"Can create realistic answers\", value: \"Can create realistic answers\" },\r\n            { text: \"Can occasionally create realistic answers\", value: \"Can occasionally create realistic answers\" },\r\n            { text: \"Can create non-realistic answers\", value: \"Can create non-realistic answers\" },\r\n            { text: \"Answers were not realistic\", value: \"Answers were not realistic\" },\r\n        ],\r\n        couldConverse: [\r\n            { text: \"Yes, perfectly well\", value: \"Yes, perfectly well\" },\r\n            { text: \"Yes, but not very well\", value: \"Yes, but not very well\" },\r\n            { text: \"No, not at all\", value: \"No, not at all\" },\r\n        ],\r\n        canLie: [\r\n            { text: \"Yes, the ability to lie would make it more realistic and believable\", value: \"Yes the ability to lie would make it more realistic and believable\" },\r\n            { text: \"No, the ability to lie would not make it any more believable\", value: \"No, the ability to lie would not make it any more believable\" },\r\n        ],\r\n        listeningEffortOptions: [\r\n            { text: \"No effort required\", value: \"No effort required\" },\r\n            { text: \"Some effort required\", value: \"Some effort required\" },\r\n            { text: \"Moderate effort required\", value: \"Moderate effort required\" },\r\n            { text: \"Effort required\", value: \"Effort required\" },\r\n            { text: \"No meaning understood with lots of effort\", value: \"No meaning understood with lots of effort\" }\r\n        ],\r\n        hardToUnderstandOptions: [\r\n            { text: \"Never\", value: \"Never\" },\r\n            { text: \"Rarely\", value: \"Rarely\" },\r\n            { text: \"Sometimes\", value: \"Sometimes\" },\r\n            { text: \"Often\", value: \"Often\" },\r\n            { text: \"All of the time\", value: \"All of the time\" }\r\n        ],\r\n        voicePace: [\r\n            { text: \"Too fast\", value: \"Too fast\" },\r\n            { text: \"Just right\", value: \"Just right\" },\r\n            { text: \"Too slow\", value: \"Too slow\" }\r\n        ],\r\n        voice3ComparisonOptions: [\r\n            { text: \"Much better\", vlaue: \"Much better\" },\r\n            { text: \"Slightly better\", vlaue: \"Slightly better\"},\r\n            { text: \"No different\", value: \"No different\" },\r\n            { text: \"Slightly worse\", value: \"Slightly worse\" },\r\n            { text: \"Much worse\", value: \"Much worse\" }\r\n        ],\r\n        voicesOptions: [\r\n            { text: \"Voice 1\", value: \"Voice 1\"},\r\n            { text: \"Voice 2\", value: \"Voice 2\"},\r\n            { text: \"Voice 3\", value: \"Voice 3\"}\r\n        ],\r\n    }),\r\n    methods: {},\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div id=\"consent\">\r\n                <BContainer>\r\n                    <h2>Evaluation</h2>\r\n                    <div>\r\n                        <h3>This section is all about the language model text that was created</h3>\r\n                        <h4>Story creation</h4>\r\n                        <label for=\"trailOff\">Did the model stick to the orginal prompt or did it trail off?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"trailOff\" v-model={this.$store.state.survey.story.trailOff} options={this.trailOff}></BFormRadioGroup>\r\n                        <label for=\"trailOffReason\">If it did not stick to the orriginal prompt, what did it do?</label>\r\n                        <BFormInput class=\"mb-3\" id=\"prompt1\" v-model={this.$store.state.survey.story.trailOffReason}></BFormInput>\r\n                        <label for=\"errors\">Did the model make any errors?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"errors\" v-model={this.$store.state.survey.story.errors} options={this.errors}></BFormRadioGroup>\r\n                        <label for=\"knowledgable\">Was the model knowledgable?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"knowledgable\" v-model={this.$store.state.survey.story.knowledgable} options={this.knowledgable}></BFormRadioGroup>\r\n                        <label for=\"engagingStorys\">Rembering that the model can be trained, do you think that it could create engaging storys?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"engagingStorys\" v-model={this.$store.state.survey.story.engagingStorys} options={this.engagingStorys}></BFormRadioGroup>\r\n                        <label for=\"prompt1\">Please copy and paste your response from prompt 1</label>\r\n                        <BFormInput class=\"mb-3\" id=\"prompt1\" v-model={this.$store.state.survey.story.prompt1}></BFormInput>\r\n                        <label for=\"prompt2\">Please copy and paste your response from prompt 2</label>\r\n                        <BFormInput class=\"mb-3\" id=\"prompt2\" v-model={this.$store.state.survey.story.prompt2}></BFormInput>\r\n                        <label for=\"prompt3\">Please copy and paste your response from prompt 3</label>\r\n                        <BFormInput class=\"mb-3\" id=\"prompt3\" v-model={this.$store.state.survey.story.prompt3}></BFormInput>\r\n\r\n                        <h4>NPC chat</h4>\r\n                        <label for=\"realisticAnswers\">Did the model give realistic answers?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"realisticAnswers\" v-model={this.$store.state.survey.chat.realisticAnswers} options={this.realisticAnswers}></BFormRadioGroup>\r\n                        <label for=\"couldConverse\">Remebering that the bot can be trained, do you think that it could converse with the player in a game?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"couldConverse\" v-model={this.$store.state.survey.chat.couldConverse} options={this.couldConverse}></BFormRadioGroup>\r\n                        <label for=\"canLie\"> If the bot could lie, do you think it would make it a more believable character?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"canLie\" v-model={this.$store.state.survey.chat.canLie} options={this.canLie}></BFormRadioGroup>\r\n                        <p></p>\r\n                    </div> \r\n                    <div>\r\n                        <h3>This section is all about Voice 1</h3>\r\n                        <label for=\"overallRating\">How would you rate the overall quality of the voice?</label>\r\n                        <BFormRating class=\"mb-3\" id=\"overallRating\" v-model={this.$store.state.survey.voice1.overallRating}></BFormRating>\r\n                        <label for=\"listeningEffort\">How much effort was required to listen to the voice?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"listeningEffort\" v-model={this.$store.state.survey.voice1.listeningEffort} options={this.listeningEffortOptions}></BFormRadioGroup>\r\n                        <label for=\"hardToUnderstand\">Did you find any words hard to understand?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"hardToUnderstand\" v-model={this.$store.state.survey.voice1.hardToUnderstand} options={this.hardToUnderstandOptions}></BFormRadioGroup>\r\n                        <label for=\"whichWords\">Which words were they?</label>\r\n                        <BFormInput class=\"mb-3\" id=\"whichWords\" v-model={this.$store.state.survey.voice1.whichWords}></BFormInput>\r\n                        <label for=\"voicePace\">Was the voice the right pace for you to understand?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"voicePace\" v-model={this.$store.state.survey.voice1.voicePace} options={this.voicePace}></BFormRadioGroup>\r\n                        <label for=\"voiceComparison\">In comparrison to voice 3 how much better or worse was this voice?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"voiceComparison\" v-model={this.$store.state.survey.voice1.voice3Comparison} options={this.voice3ComparisonOptions}></BFormRadioGroup>\r\n                    </div>\r\n                    <div>\r\n                        <h3>This section is all about Voice 2</h3>\r\n                        <label for=\"overallRating2\">How would you rate the overall quality of the voice?</label>\r\n                        <BFormRating class=\"mb-3\" id=\"overallRating2\" v-model={this.$store.state.survey.voice2.overallRating}></BFormRating>\r\n                        <label for=\"listeningEffort2\">How much effort was required to listen to the voice?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"listeningEffort2\" v-model={this.$store.state.survey.voice2.listeningEffort} options={this.listeningEffortOptions}></BFormRadioGroup>\r\n                        <label for=\"hardToUnderstand2\">Did you find any words hard to understand?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"hardToUnderstand2\" v-model={this.$store.state.survey.voice2.hardToUnderstand} options={this.hardToUnderstandOptions}></BFormRadioGroup>\r\n                        <label for=\"whichWords2\">Which words were they?</label>\r\n                        <BFormInput class=\"mb-3\" id=\"whichWords2\" v-model={this.$store.state.survey.voice2.whichWords}></BFormInput>\r\n                        <label for=\"voicePace2\">Was the voice the right pace for you to understand?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"voicePace2\" v-model={this.$store.state.survey.voice2.voicePace} options={this.voicePace}></BFormRadioGroup>\r\n                        <label for=\"voiceComparison2\">In comparrison to voice 3 how much better or worse was this voice?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"voiceComparison2\" v-model={this.$store.state.survey.voice2.voice3Comparison} options={this.voice3ComparisonOptions}></BFormRadioGroup>\r\n                    </div>\r\n                    <div>\r\n                        <h3>All the voices</h3>\r\n                        <label for=\"preferredVoice\">Of the 3 voices, which did you prefer?</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"preferredVoice\" v-model={this.$store.state.survey.voices.preferredVoice} options={this.voicesOptions}></BFormRadioGroup>\r\n                        <label for=\"preferredReason\">Why?</label>\r\n                        <BFormInput class=\"mb-3\" id=\"preferredReason\" v-model={this.$store.state.survey.voices.preferredVoiceReason}></BFormInput>\r\n                        <label for=\"clearestVoice\">Which of the three voices was the clearest</label>\r\n                        <BFormRadioGroup class=\"mb-3\" id=\"clearestVoice\" v-model={this.$store.state.survey.voices.clearestVoice} options={this.voicesOptions}></BFormRadioGroup>\r\n                    </div>\r\n                    <BRow>\r\n                        <BButton variant=\"success\" class=\"mb-3\" on-click={() => { this.$store.dispatch(\"forward\"); }}>To Submit</BButton>\r\n                    </BRow>\r\n                </BContainer>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import { BButton, BContainer, BSpinner } from \"bootstrap-vue\"\r\n\r\nexport default {\r\n    name: \"Submit\",\r\n    data: () => ({}),\r\n    methods: {\r\n        submit() {\r\n            if (!this.$store.state.submitted) {\r\n                this.$store.dispatch(\"submitResponse\");\r\n                this.$store.state.submitted = true;\r\n            }\r\n        }\r\n    },\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BContainer>\r\n                    <h3>Thank you</h3>\r\n                    <p class=\"mb-6\">Again, thankyou for taking the time to take part in my study it is very helpful to my undergraduate degree.</p>\r\n                    <p>You understand that after you submit you are no longer able to retrieve your data as it is annoymised on the server.</p>\r\n                    <BButton on-click={() => { this.submit(); }}>Submit responses</BButton>\r\n                    {this.$store.state.loading === true && <BSpinner />}\r\n                    {this.$store.state.submitted === true && <p>Thank you for submitting your responses you may leave this page</p>}\r\n                </BContainer>\r\n            </div>\r\n        );\r\n    },\r\n};\r\n","import Consent from \"./components/Consent.js\";\r\nimport LanguageModel from \"./components/LanguageModel.js\";\r\nimport ChatModel from \"./components/ChatModel.js\";\r\nimport Evaluation from \"./components/Evaluation.js\";\r\nimport Submit from \"./components/Submit.js\";\r\n\r\nexport default {\r\n    name: \"App\",\r\n    components: {\r\n        Consent,\r\n        LanguageModel,\r\n        Evaluation,\r\n        Submit\r\n    },\r\n    methods: {},\r\n    computed: {},\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* This is the pages navigation bar so users can move about the application*/}\r\n                <BRow class=\"justify-content-around m-1 text-center\">\r\n                    <BCol class=\"col-sm-2\"><BRow><BButton on-click={() => { this.$store.dispatch(\"backward\"); }}><BIcon icon=\"arrow-left\"></BIcon></BButton></BRow></BCol>\r\n                    <BCol class=\"col-sm-2 ml-auto\"><BRow><BButton on-click={() => { this.$store.dispatch(\"forward\"); }}><BIcon icon=\"arrow-right\"></BIcon></BButton></BRow></BCol>\r\n                </BRow>\r\n\r\n                {/* Dynamically render each page/component based off the page number */}\r\n                {this.$store.state.activePage === 1 && <Consent />}\r\n                {this.$store.state.activePage === 2 && <LanguageModel />}\r\n                {this.$store.state.activePage === 3 && <ChatModel />}\r\n                {this.$store.state.activePage === 4 && <Evaluation />}\r\n                {this.$store.state.activePage === 5 && <Submit />}\r\n                \r\n            </div>\r\n        );\r\n    },\r\n};","import Vuex from \"vuex\";\r\nimport Vue from \"vue\";\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        loading: false,\r\n        submitted: false,\r\n        audio: new Audio(),\r\n        activePage: 1,\r\n        model1: \"\",\r\n        model2: \"The following is a conversation with an AI assistant. The assistant is helpful, creative, clever, and very friendly.\\n\\nHuman: \",\r\n        prompt1: \"Prompt 1\",\r\n        prompt2: \"Prompt 2\",\r\n        prompt3: \"Prompt 3\",\r\n        survey: {\r\n            story: {\r\n                trailOff: \"\",\r\n                trailOffReason: \"\",\r\n                errors: \"\",\r\n                knowledgable: \"\",\r\n                engagingStorys: \"\",\r\n                prompt1: \"\",\r\n                prompt2: \"\",\r\n                prompt3: \"\",\r\n            },\r\n            chat: {\r\n                realisticAnswers: \"\",\r\n                couldConverse: \"\",\r\n                canLie: \"\"\r\n            },\r\n            voice1: {\r\n                overallRating: 0,\r\n                listeningEffort: \"\",\r\n                hardToUnderstand: \"\",\r\n                whichWords: \"\",\r\n                voicePace: \"\",\r\n                voice3Comparison: \"\"\r\n            },\r\n            voice2: {\r\n                overallRating: 0,\r\n                listeningEffort: \"\",\r\n                hardToUnderstand: \"\",\r\n                whichWords: \"\",\r\n                voicePace: \"\",\r\n                voice3Comparison: \"\"\r\n            },\r\n            voices: {\r\n                preferredVoice: \"\",\r\n                preferredVoiceReason: \"\",\r\n                clearestVoice: \"\"\r\n            },\r\n        },\r\n    },\r\n    mutations: {\r\n        setActivePage(state, page) {\r\n            state.activePage = page;\r\n        },\r\n        incrementPage(state) {\r\n            if (state.activePage != 5) {\r\n                state.activePage += 1;\r\n            }\r\n        },\r\n        decrementPage(state) {\r\n            if (state.activePage != 1) {\r\n                state.activePage -= 1;\r\n            }\r\n        },\r\n        setModel1(state, text) {\r\n            state.model1 += text;\r\n        },\r\n        setModel2(state, text) {\r\n            state.model2 += text;\r\n        }\r\n    },\r\n    actions: {\r\n        changePage({ commit }, page) {\r\n            commit(\"setActivePage\", page);\r\n        },\r\n        forward({ commit }) {\r\n            commit(\"incrementPage\");\r\n        },\r\n        backward({ commit }) {\r\n            commit(\"decrementPage\");\r\n        },\r\n        sendPrompt({ commit }, modelNumber) {\r\n            this.state.loading = true;\r\n            \r\n            let model = (modelNumber === 1) ? this.state.model1 : this.state.model2;\r\n            let setModel = (modelNumber === 1) ? \"setModel1\" : \"setModel2\";\r\n            let type = (modelNumber === 1) ? 'completion' : 'chat';\r\n\r\n            fetch(`${window.location.origin}/languagemodel`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ text: model, type: type }),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.text();\r\n            }).then(data => {\r\n                console.log(data);\r\n                commit(setModel, data);\r\n                this.state.loading = false;\r\n            }).catch(error => { console.log(error); });\r\n        },\r\n        sendTTS({ commit }, { model, tts , engine}) {\r\n            let modelText = (model === 1) ? this.state.model1 : this.state.model2;\r\n            let ttsChoice = ['getazure', 'getgoogle'];\r\n            let engineChoice = ['standard', 'neural'];\r\n            let ttsModel = ttsChoice[tts];\r\n            let engineModel = engineChoice[engine];\r\n\r\n            this.state.audio.pause();\r\n            this.state.audio.src = `${window.location.origin}/tts/${ttsModel}/?answer=${modelText}&engine=${engineModel}`;\r\n            this.state.audio.play();\r\n        },\r\n        submitResponse({ commit }) {\r\n            this.state.loading = true;\r\n            console.log(JSON.stringify(this.state.survey));\r\n            fetch(`${window.location.origin}/submit`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(this.state.survey),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }).then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.text();\r\n            }).then(data => {\r\n                this.state.loading = false;\r\n                console.log(data);\r\n            }).catch(error => { console.log(error); });\r\n        },\r\n    },\r\n});","/*Import Vue and associated Vue dependencies*/\r\nimport Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n/*Import bootstrap and nessecary files*/\r\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\r\nimport App from \"./App.js\";\r\nimport Store from \"./components/Store.js\";\r\n\r\nVue.use(Vuex);\r\nVue.use(BootstrapVue);\r\nVue.use(IconsPlugin);\r\nVue.config.productionTip = false;\r\n\r\nnew Vue({\r\n  store: Store,\r\n  render: (h) => h(App),\r\n}).$mount(\"#app\");\r\n"],"sourceRoot":""}